#vi service-account.yml

apiVersion: apps/v1
kind: ServiceAccount
metadata:
  name: read-only-user
  namespace: default
------------------------------------------------------------------

-------------------------------------------------------------------

#vi cluster-role.yml

apiVersion: rbac.authorization.k8s.io/v1  #kubectl api-resources | grep -iE "kind|Cluster" #kubectl explain clusterroles then copy the "VERSION" value
kind: ClusterRole
metadata:
  namespace: default
  name: read-only-user-cluster-role
rules:
  - verbs:
     - "list"  # list of resources that user can access
  apiGroups:
   - ""        # "" means all apiGroups
  resources:
   - "pods"

-------------------------------------------------------------------

-------------------------------------------------------------------
# we have created service account (user) and cluster role, now we need to bind both together 

# vi cluster-role-binding.yml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: default
  name: read-only-user-cluster-role-binding
roleRef:
  name: read-only-user-cluster-role
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: serviceAccount
    name: read-only-user
    namespace: default

---------------------------------------------------------------------------

# kubectl apply -f service-account.yml -f cluster-role.yml -f cluster-role-binding.yml (to create them)
